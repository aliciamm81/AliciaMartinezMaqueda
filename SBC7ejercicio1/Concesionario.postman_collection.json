{
	"info": {
		"_postman_id": "389d269c-c8c2-43a3-96c8-923501a05571",
		"name": "Concesionario",
		"description": "# ðŸš€ Get started here\n\nThis template guides you through CRUD operations (GET, POST)\n\n## ðŸ”– **How to use this template**\n\n#### **Step 1: Send requests**\n\nRESTful APIs allow you to perform CRUD operations using the POST, GET.\n\nThis collection contains each of these [request](https://learning.postman.com/docs/sending-requests/requests/) types. Open each request and click \"Send\" to see what happens.\n\n#### **Step 2: View responses**\n\nObserve the response tab for status code (200 OK), response time, and size.\n\n#### **Step 3: Send new Body data**\n\nUpdate or add new data in \"Body\" in the POST request. Typically, Body data is also used in PUT request.\n\n```\n{\n    \"name\": \"Add your name in the body\"\n}\n\n ```\n\n## ðŸ’ª Pro tips\n\n- Use folders to group related requests and organize the collection.\n    \n\n## ðŸ’¡Related templates\n\n[API documentation](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9c28f47-1253-44af-a2f3-20dce4da1f18&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[Authorization methods](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=31a9a6ed-4cdf-4ced-984c-d12c9aec1c27&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26107817",
		"_collection_link": "https://cloudy-trinity-585038.postman.co/workspace/21d6c910-4406-466a-abe1-f0ff6b8cc269/collection/26107817-389d269c-c8c2-43a3-96c8-923501a05571?action=share&source=collection_link&creator=26107817"
	},
	"item": [
		{
			"name": "Get data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/info?id=1",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"info"
					],
					"query": [
						{
							"key": "id",
							"value": "1"
						}
					]
				},
				"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
			},
			"response": []
		},
		{
			"name": "Post data",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\r\n    {   \r\n        \"brand\": \"Peugeot\",\r\n        \"model\": \"206\",\r\n        \"kilometers\": \"150000\",\r\n        \"doors\": 5,\r\n        \"price\": 7500.0\r\n    },\r\n   {\r\n    \"brand\": \"Toyota\",\r\n    \"model\": \"Corolla\",\r\n    \"kilometers\": \"120000\",\r\n    \"doors\": 4,\r\n    \"price\": 8500.0\r\n},\r\n{\r\n    \"brand\": \"Ford\",\r\n    \"model\": \"Fiesta\",\r\n    \"kilometers\": \"80000\",\r\n    \"doors\": 3,\r\n    \"price\": 6000.0\r\n},\r\n{\r\n    \"brand\": \"Honda\",\r\n    \"model\": \"Civic\",\r\n    \"kilometers\": \"100000\",\r\n    \"doors\": 4,\r\n    \"price\": 9000.0\r\n},\r\n{\r\n    \"brand\": \"Volkswagen\",\r\n    \"model\": \"Golf\",\r\n    \"kilometers\": \"95000\",\r\n    \"doors\": 5,\r\n    \"price\": 7800.0\r\n}\r\n\r\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/api/vehicles",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"vehicles"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get data order price",
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		},
		{
			"name": "Get data order by id",
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "base_url",
			"value": "https://postman-rest-api-learner.glitch.me/"
		}
	]
}